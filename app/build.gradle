apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        applicationId "com.jmvincenti.marvelcharacters"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 0 //ignored
        versionName "0.0" //ignored
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        DEV {
            dimension "environment"
            versionCode gitVersionCodeTime
            versionName gitVersionNameBranch
            applicationIdSuffix ".dev"
            buildConfigField 'String', 'API_BASE_URL', "\"${devEnvironment.baseUrl}\""
            buildConfigField 'String', 'API_PRIVATE_KEY', "\"${devEnvironment.privateKey}\""
            buildConfigField 'String', 'API_PUBLIC_KEY', "\"${devEnvironment.publicKey}\""
        }
        PROD {
            dimension "environment"
            versionCode gitVersionCode
            versionName gitVersionName
            buildConfigField 'String', 'API_BASE_URL', prodEnvironment.baseUrl
            buildConfigField 'String', 'API_PRIVATE_KEY', prodEnvironment.privateKey
            buildConfigField 'String', 'API_PUBLIC_KEY', prodEnvironment.publicKey
        }
    }

    //Ignore release in dev flavor
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'DEV') {
            variant.setIgnore(true)
        }
    }

    //Rename generated APK file name with version code and name
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def app_name = variant.getApplicationId()
                def versionName = "-" + variant.versionName
                def versionCode = "-" + variant.versionCode
                def fileName = app_name + versionName + versionCode + ".apk"
                outputFileName = fileName
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation libraries.appCompat
    implementation libraries.constraintLayout
    implementation libraries.cardview
    implementation libraries.design
    implementation libraries.paging
    implementation libraries.pagingRx
    implementation libraries.lifecycle

    implementation libraries.retrofitRx
    implementation libraries.rxandroid
    implementation libraries.rxjava

    implementation libraries.hawk
    implementation libraries.timber


}
